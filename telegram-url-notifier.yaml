apiVersion: batch/v1
kind: Job
metadata:
  name: telegram-command-notifier
spec:
  template:
    spec:
      containers:
        - name: telegram-command-bot
          image: lachlanevenson/k8s-kubectl:latest
          command: ["/bin/sh", "-c"]
          env:
            - name: TELEGRAM_TOKEN
              valueFrom:
                secretKeyRef:
                  name: telegram-token
                  key: TELEGRAM_TOKEN
            - name: TELEGRAM_CHAT_ID
              valueFrom:
                secretKeyRef:
                  name: telegram-chat-id
                  key: TELEGRAM_CHAT_ID
          args:
            - |
              LAST_URL=""
              LAST_UPDATE_ID=0
              
              while true; do
                # Извлекаем текущий URL из логов Ngrok
                CURRENT_URL=$(kubectl logs -l app=ngrok -c ngrok-container --tail=20 | grep -o 'https://[a-z0-9-]*\.ngrok-free\.app' | tail -n 1)

                if [ "$CURRENT_URL" != "$LAST_URL" ] && [ -n "$CURRENT_URL" ]; then
                  RESPONSE=$(curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_TOKEN/sendMessage" \
                    -d chat_id="$TELEGRAM_CHAT_ID" \
                    -d text="Ngrok URL: $CURRENT_URL")
                  echo "URL отправлен в Telegram: $CURRENT_URL"
                  LAST_URL="$CURRENT_URL"
                else
                  echo "URL не изменился, повтор через 10 секунд..."
                fi

                # Проверяем сообщения в Telegram на команду /update
                UPDATES=$(curl -s "https://api.telegram.org/bot$TELEGRAM_TOKEN/getUpdates?offset=$((LAST_UPDATE_ID + 1))")
              
                # Ищем команду /update и новый update_id
                COMMAND_FOUND=$(echo "$UPDATES" | grep -o "\"/update\"")
                NEW_UPDATE_ID=$(echo "$UPDATES" | grep -o '"update_id":[0-9]*' | sed 's/"update_id"://g' | tail -n 1)

                if [ -n "$COMMAND_FOUND" ] && [ "$NEW_UPDATE_ID" -gt "$LAST_UPDATE_ID" ]; then
                  echo "Команда /update получена. Перезапуск фронтенда и бэкенда..."
              
                  kubectl rollout restart deployment react-frontend
                  kubectl rollout restart deployment springboot-backend
              
                  curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_TOKEN/sendMessage" \
                    -d chat_id="$TELEGRAM_CHAT_ID" \
                    -d text="Ноды с фронтендом и бэкендом перезапущены по команде /update"
              
                  echo "Перезапуск выполнен."
              
                  LAST_UPDATE_ID=$NEW_UPDATE_ID
                fi

                sleep 10
              done
      restartPolicy: Never